plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5' // 我们使用一个非常稳定的3.1.5版本
    id 'io.spring.dependency-management' version '1.1.3'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

// 【关键】: 统一声明所有Spring Cloud和Alibaba Cloud的版本
ext {
    set('springCloudVersion', "2022.0.4")
    set('springCloudAlibabaVersion', "2022.0.0.0")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-nacos-discovery'
    implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'

    // 我们不再需要显式添加 loadbalancer，starter-gateway 会处理好
    // 测试依赖
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // 【新增】JWT 相关依赖，和 user-service 中的保持一致
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
}

// 【关键】: 引入版本管理
dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
